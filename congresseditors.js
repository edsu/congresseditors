// Generated by CoffeeScript 1.6.2
(function() {
  var CongressEditors, Twit, argv, cheerio, loadJson, main, minimist, request, wikichanges;

  Twit = require('twit');

  cheerio = require('cheerio');

  request = require('request');

  minimist = require('minimist');

  wikichanges = require('wikichanges');

  CongressEditors = (function() {
    function CongressEditors(config) {
      this.config = config;
      this.lastChange = {};
      this.pages = {};
    }

    CongressEditors.prototype.run = function() {
      var wikipedia,
        _this = this;

      this._update(this.config.refresh);
      wikipedia = new wikichanges.WikiChanges({
        ircNickname: this.config.nick,
        wikipedias: ["#en.wikipedia"]
      });
      return wikipedia.listen(function(edit) {
        return _this.inspect(edit);
      });
    };

    CongressEditors.prototype.inspect = function(edit) {
      var status, twitter;

      if (!this.pages[edit.page]) {

      } else if (Math.abs(edit.delta) <= 10) {

      } else if (edit.robot) {

      } else if (this._repeat(edit)) {

      } else {
        status = this._getStatus(edit);
        console.log(status);
        twitter = new Twit(this.config);
        return twitter.post('statuses/update', {
          status: status
        }, function(err) {
          if (err) {
            return console.log(err);
          }
        });
      }
    };

    CongressEditors.prototype._getStatus = function(edit) {
      var status, statusLength, title, titleLength, user;

      title = edit.page;
      user = edit.anonymous ? "Anonymous" : edit.user;
      status = "" + title + " Wikipedia article edited by " + user + " ";
      statusLength = status.length + 22;
      if (statusLength > 140) {
        titleLength = title.length - (statusLength - 140);
        title = title.slice(0, +titleLength + 1 || 9e9);
      }
      return status = ("" + title + " Wikipedia article edited by " + user + " ") + edit.url;
    };

    CongressEditors.prototype._update = function(refresh) {
      var newPages,
        _this = this;

      newPages = [];
      return this._getHouse(function(names) {
        var name, _i, _len;

        for (_i = 0, _len = names.length; _i < _len; _i++) {
          name = names[_i];
          newPages[name] = true;
        }
        return _this._getSenate(function(names) {
          var _j, _len1;

          for (_j = 0, _len1 = names.length; _j < _len1; _j++) {
            name = names[_j];
            newPages[name] = true;
          }
          return _this._getBills(function(bills) {
            var bill, doUpdate, _k, _len2;

            for (_k = 0, _len2 = bills.length; _k < _len2; _k++) {
              bill = bills[_k];
              newPages[bill] = true;
            }
            _this.pages = newPages;
            console.log("monitoring " + (Object.keys(_this.pages).length) + " pages");
            if (refresh instanceof Function) {
              return refresh();
            } else {
              doUpdate = function() {
                return _this._update(refresh);
              };
              return setTimeout(doUpdate, refresh * 1000);
            }
          });
        });
      });
    };

    CongressEditors.prototype._repeat = function(edit) {
      var k, r, v;

      k = "" + edit.wikipedia;
      v = "" + edit.page + ":" + edit.user;
      r = this.lastChange[k] === v;
      this.lastChange[k] = v;
      return r;
    };

    CongressEditors.prototype._getHouse = function(callback) {
      var url;

      url = 'https://en.wikipedia.org/wiki/Current_members_of_the_United_States_House_of_Representatives';
      return this._getNames(url, callback);
    };

    CongressEditors.prototype._getSenate = function(callback) {
      var url;

      url = 'https://en.wikipedia.org/wiki/List_of_current_United_States_Senators';
      return this._getNames(url, callback);
    };

    CongressEditors.prototype._getBills = function(callback) {
      var bills, url;

      url = this.config.congress;
      bills = [];
      return this._getDom(url, function($) {
        $('table[class="wikitable"] tr').each(function() {
          var a, p, _i, _len, _ref;

          p = [];
          _ref = $(this).find('td a');
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            a = _ref[_i];
            if ($(a).attr('href').match(/^\/wiki\/(.+)$/)) {
              p.push($(a).attr('title'));
            }
          }
          if (p[0]) {
            return bills.push(p[0]);
          }
        });
        return callback(bills);
      });
    };

    CongressEditors.prototype._getNames = function(url, callback) {
      return this._getDom(url, function($) {
        var names;

        names = [];
        $('span[class="fn"] a').each(function() {
          return names.push($(this).attr('title'));
        });
        return callback(names);
      });
    };

    CongressEditors.prototype._getDom = function(url, callback) {
      var _this = this;

      return request(url, function(err, response, body) {
        var names;

        if (err) {
          console.log(err);
          return;
        }
        names = [];
        return callback(cheerio.load(body));
      });
    };

    return CongressEditors;

  })();

  loadJson = function(path) {
    if (path[0] !== '/' && path.slice(0, 2) !== './') {
      path = './' + path;
    }
    return require(path);
  };

  argv = minimist(process.argv.slice(2), {
    "default": {
      config: './config.json',
      list: false
    }
  });

  main = function() {
    var c, config;

    config = loadJson(argv.config);
    c = new CongressEditors(config);
    if (argv.list) {
      return c._update(function() {
        var page, _i, _len, _ref, _results;

        _ref = Object.keys(c.pages);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          page = _ref[_i];
          _results.push(console.log(page));
        }
        return _results;
      });
    } else {
      return c.run();
    }
  };

  if (require.main === module) {
    main();
  }

}).call(this);
